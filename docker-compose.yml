version: "3.7"

services:
  db:
    container_name: chat-db
    image: postgres:alpine
    restart: unless-stopped
    environment:
      POSTGRES_HOST_AUTH_METHOD: trust
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-pass}
      POSTGRES_USER: ${POSTGRES_USER:-user}
      PGDATA: /data/postgres
    healthcheck:
      test: pg_isready -U user
      interval: 30s
      timeout: 5s
      retries: 5
    ports:
      - "5432:5432"
    volumes:
      - postgres:/data/postgres
    networks:
      - postgres
  server:
    container_name: chat-app
    image: chat-app:1.0
    restart: on-failure
    depends_on:
      - db
    environment:
      POSTGRES_DATABASE: ${POSTGRES_DATABASE:-chat}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-pass}
      POSTGRES_USER: ${POSTGRES_USER:-user}
      POSTGRES_HOST: ${POSTGRES_HOST:-chat-db}
      POSTGRES_PORT: ${POSTGRES_PORT:-5432}
    build:
      context: .
      target: websocket-chat
      dockerfile: docker/Dockerfile
    healthcheck:
      test: curl --fail -s http://localhost:8080/api/health || exit 1
      interval: 30s
      timeout: 5s
      retries: 5
    ports:
      - "8080:8080"
    networks:
      - postgres
networks:
  postgres:
    driver: bridge
volumes:
    postgres:
